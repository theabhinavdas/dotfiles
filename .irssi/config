servers = (
  {
    address = "";
    chatnet = "";
    port = "";
    password = "";
    use_tls = "";
    tls_verify = "";
    autoconnect = "";
  }
);
chatnets = { thunder = { type = "IRC"; }; };

aliases = {
  J = "JOIN";
  EXIT = "QUIT";
  RECO = "reconnect";
  DATE = "TIME";
  HOST = "USERHOST";
  SAY = "MSG *";
  W = "WHO";
  N = "NAMES";
  M = "MSG";
  T = "TOPIC";
  C = "CLEAR";
  K = "KICK";
  KB = "KICKBAN";
  B = "BAN";
  WC = "WINDOW CLOSE";
  RUN = "SCRIPT LOAD";
  Q = "QUERY";
  ATAG = "WINDOW SERVER";
  ADDALLCHANS = "SCRIPT EXEC foreach my \\$channel (Irssi::channels()) { Irssi::command(\"CHANNEL ADD -auto \\$channel->{name} \\$channel->{server}->{tag} \\$channel->{key}\")\\;}";
  BACK = "AWAY";
  BANS = "BAN";
  BYE = "QUIT";
  CALC = "EXEC - if command -v bc >/dev/null 2>&1\\; then printf '%s=' '$*'\\; echo '$*' | bc -l\\; else echo bc was not found\\; fi";
  CHAT = "DCC CHAT";
  DEHIGHLIGHT = "DEHILIGHT";
  DESCRIBE = "ACTION";
  DHL = "DEHILIGHT";
  EXEMPTLIST = "MODE $C +e";
  GOTO = "SCROLLBACK GOTO";
  HIGHLIGHT = "HILIGHT";
  HL = "HILIGHT";
  INVITELIST = "MODE $C +I";
  KN = "KNOCKOUT";
  LAST = "LASTLOG";
  LEAVE = "PART";
  MUB = "UNBAN *";
  NMSG = "^MSG";
  P = "PART";
  RESET = "SET -default";
  SB = "SCROLLBACK";
  SBAR = "STATUSBAR";
  SIGNOFF = "QUIT";
  SV = "MSG * Irssi $J ($V) - https://irssi.org";
  UB = "UNBAN";
  UMODE = "MODE $N";
  UNSET = "SET -clear";
  WG = "WINDOW GOTO";
  WJOIN = "JOIN -window";
  WI = "WHOIS";
  WII = "WHOIS $0 $0";
  WL = "WINDOW LIST";
  WN = "WINDOW NEW HIDDEN";
  WQUERY = "QUERY -window";
  WW = "WHOWAS";
};

statusbar = {
  # formats:
  # when using {templates}, the template is shown only if it's argument isn't
  # empty unless no argument is given. for example {sb} is printed always,
  # but {sb $T} is printed only if $T isn't empty.

  items = {
    # start/end text in statusbars
    barstart = "{sbstart}";
    barend = "{sbend}";

    topicbarstart = "{topicsbstart}";
    topicbarend = "{topicsbend}";

    # treated "normally", you could change the time/user name to whatever
    time = "{sb $Z}";
    user = "{sb {sbnickmode $cumode}$N{sbmode $usermode}{sbaway $A}}";

    # treated specially .. window is printed with non-empty windows,
    # window_empty is printed with empty windows
    window = "{sb $winref:$tag/$itemname{sbmode $M}}";
    window_empty = "{sb $winref{sbservertag $tag}}";
    prompt = "{prompt $[.15]itemname}";
    prompt_empty = "{prompt $winname}";
    topic = " $topic";
    topic_empty = " Irssi v$J - https://irssi.org";

    # all of these treated specially, they're only displayed when needed
    # Powerline
    #lag = "{sb Lag: $0-}";
    #act = "{sb Act: $0-}";
    #more = "-- more --";

    # Solarized
    lag = "{sb Lag: %m$0-%n}";
    act = "{sb Act: $0-}";
    more = "%k%3-- more --%n";
  };
  # there's two type of statusbars. root statusbars are either at the top
  # of the screen or at the bottom of the screen. window statusbars are at
  # the top/bottom of each split window in screen.
  default = {
    # the "default statusbar" to be displayed at the bottom of the window.
    # contains all the normal items.
    window = {
      disabled = "no";

      # window, root
      type = "window";
      # top, bottom
      placement = "bottom";
      # number
      position = "1";
      # active, inactive, always
      visible = "active";

      # list of items in statusbar in the display order
      items = {
        barstart = { priority = "100"; };
        time = { };
        user = { };
        window = { };
        window_empty = { };
        lag = { priority = "-1"; };
        act = { priority = "10"; };
        more = { priority = "-1"; alignment = "right"; };
        barend = { priority = "100"; alignment = "right"; };
        otr = { };
        usercount = { };
        loadavg = { };
        daumode = { };
      };
    };
    # statusbar to use in inactive split windows
    window_inact = {
      type = "window";
      placement = "bottom";
      position = "1";
      visible = "inactive";
      items = {
        barstart = { priority = "100"; };
        window = { };
        window_empty = { };
        more = { priority = "-1"; alignment = "right"; };
        barend = { priority = "100"; alignment = "right"; };
      };
    };
    # we treat input line as yet another statusbar :) It's possible to
    # add other items before or after the input line item.
    prompt = {
      type = "root";
      placement = "bottom";
      # we want to be at the bottom always
      position = "100";
      visible = "always";
      items = {
        prompt = { priority = "-1"; };
        prompt_empty = { priority = "-1"; };
        # treated specially, this is the real input line.
        input = { priority = "10"; };
      };
    };
    # topicbar
    topic = {
      type = "root";
      placement = "top";
      position = "1";
      visible = "always";
      items = {
        topicbarstart = { priority = "100"; };
        topic = { };
        topic_empty = { };
        topicbarend = { priority = "100"; alignment = "right"; };
      };
    };
  };
};

settings = {
  core = { real_name = ""; user_name = ""; nick = ""; };
  "fe-text" = {
    actlist_sort = "refnum";
    term_force_colors = "yes";
    autostick_split_windows = "no";
    lag_min_show = "1000ms";
  };
  "fe-common/core" = {
    theme = "solarized-universal";
    hilight_color = "%R";
    autocreate_own_query = "yes";
    use_status_window = "no";
    use_msgs_window = "no";
    print_active_channel = "yes";
    autocreate_windows = "yes";
    window_auto_change = "no";
    hide_text_style = "no";
    show_nickmode = "yes";
    completion_auto = "no";
    beep_msg_level = "MSGS DCC DCCMSGS HILIGHT";
    beep_when_away = "yes";
    beep_when_window_active = "no";
    term_charset = "UTF-8";
  };
  "perl/core/scripts" = {
    theme_autocolor = "yes";
    dau_statusbar_daumode_hide_when_off = "yes";
    neat_colorize = "yes";
    dau_daumode_channels = "";

    ### For Solarized adv_windowlist.pl script
    awl_display_key_active = "%k%2[$Q=$N:$C]%n";
    awl_display_nokey_active = "%k%2[$N:$C]%n";
    awl_display_key = "[$Q:$H$C$S]";
    awl_display_nokey = "[$N:$H$C$S]";

    ### For Solarized trackbar.pl script
    trackbar_style = "%B";
  };
  "irc/core" = { skip_motd = "yes"; };
};

hilights = (
  { text = "YOUR_NICKNAME"; color = "%M"; nick = "yes"; word = "yes"; }
);



keyboard = ( 
  { key = "meta-[M"; id = "command"; data = "mouse_xterm "; }
);

logs = { };
ignores = (
  { level = "NO_ACT JOINS PARTS QUITS"; },
  { level = "JOINS PARTS QUITS"; }
);
